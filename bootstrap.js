(()=>{var e,t,n,a,r,s,o,d={},i={};function l(e){var t=i[e];if(void 0!==t)return t.exports;var n=i[e]={id:e,exports:{}};return d[e](n,n.exports,l),n.exports}l.m=d,e="function"==typeof Symbol,t=e?Symbol("webpack queues"):"__webpack_queues__",n=e?Symbol("webpack exports"):"__webpack_exports__",a=e?Symbol("webpack error"):"__webpack_error__",r=e=>{e&&e.d<1&&(e.d=1,e.forEach(e=>e.r--),e.forEach(e=>e.r--?e.r++:e()))},l.a=(e,s,o)=>{var d;o&&((d=[]).d=-1);var i,l,c,m=new Set,u=e.exports,p=new Promise((e,t)=>{c=t,l=e});p[n]=u,p[t]=e=>(d&&e(d),m.forEach(e),p.catch(e=>{})),e.exports=p,s(e=>{var s;i=(e=>e.map(e=>{if(null!==e&&"object"==typeof e){if(e[t])return e;if(e.then){var s=[];s.d=0,e.then(e=>{o[n]=e,r(s)},e=>{o[a]=e,r(s)});var o={};return o[t]=e=>e(s),o}}var d={};return d[t]=e=>{},d[n]=e,d}))(e);var o=()=>i.map(e=>{if(e[a])throw e[a];return e[n]}),l=new Promise(e=>{(s=()=>e(o)).r=0;var n=e=>e!==d&&!m.has(e)&&(m.add(e),e&&!e.d&&(s.r++,e.push(s)));i.map(e=>e[t](n))});return s.r?l:o()},e=>(e?c(p[a]=e):l(u),r(d))),d&&d.d<0&&(d.d=0)},l.d=(e,t)=>{for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.f={},l.e=e=>Promise.all(Object.keys(l.f).reduce((t,n)=>(l.f[n](e,t),t),[])),l.u=e=>e+".bootstrap.js",l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s={},o="flashcards-www:",l.l=(e,t,n,a)=>{if(s[e])s[e].push(t);else{var r,d;if(void 0!==n)for(var i=document.getElementsByTagName("script"),c=0;c<i.length;c++){var m=i[c];if(m.getAttribute("src")==e||m.getAttribute("data-webpack")==o+n){r=m;break}}r||(d=!0,(r=document.createElement("script")).charset="utf-8",r.timeout=120,l.nc&&r.setAttribute("nonce",l.nc),r.setAttribute("data-webpack",o+n),r.src=e),s[e]=[t];var u=(t,n)=>{r.onerror=r.onload=null,clearTimeout(p);var a=s[e];if(delete s[e],r.parentNode&&r.parentNode.removeChild(r),a&&a.forEach(e=>e(n)),t)return t(n)},p=setTimeout(u.bind(null,void 0,{type:"timeout",target:r}),12e4);r.onerror=u.bind(null,r.onerror),r.onload=u.bind(null,r.onload),d&&document.head.appendChild(r)}},l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.v=(e,t,n,a)=>{var r=fetch(l.p+""+n+".module.wasm"),s=()=>r.then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,a)).then(t=>Object.assign(e,t.instance.exports));return r.then(t=>"function"==typeof WebAssembly.instantiateStreaming?WebAssembly.instantiateStreaming(t,a).then(t=>Object.assign(e,t.instance.exports),e=>{if("application/wasm"!==t.headers.get("Content-Type"))return console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",e),s();throw e}):s())},l.p="/DropCardRs/",(()=>{var e={792:0};l.f.j=(t,n)=>{var a=l.o(e,t)?e[t]:void 0;if(0!==a)if(a)n.push(a[2]);else{var r=new Promise((n,r)=>a=e[t]=[n,r]);n.push(a[2]=r);var s=l.p+l.u(t),o=new Error;l.l(s,n=>{if(l.o(e,t)&&(0!==(a=e[t])&&(e[t]=void 0),a)){var r=n&&("load"===n.type?"missing":n.type),s=n&&n.target&&n.target.src;o.message="Loading chunk "+t+" failed.\n("+r+": "+s+")",o.name="ChunkLoadError",o.type=r,o.request=s,a[1](o)}},"chunk-"+t,t)}};var t=(t,n)=>{var a,r,[s,o,d]=n,i=0;if(s.some(t=>0!==e[t])){for(a in o)l.o(o,a)&&(l.m[a]=o[a]);d&&d(l)}for(t&&t(n);i<s.length;i++)r=s[i],l.o(e,r)&&e[r]&&e[r][0](),e[r]=0},n=self.webpackChunkflashcards_www=self.webpackChunkflashcards_www||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),window.isFlashCardGameRunning?console.warn("Skipping duplicate game initialization."):(window.isFlashCardGameRunning=!0,l.e(488).then(l.bind(l,488)).then(async e=>{const{Game:t,GameMode:n,get_default_deck:a}=e,r=document.getElementById("start-screen"),s=document.getElementById("start-default-btn"),o=document.getElementById("anki-import-input"),d=document.getElementById("game-container"),i=document.getElementById("deck-config-screen"),l=document.getElementById("card-list-container"),c=document.getElementById("start-configured-game-btn");let m=[];function u(e){m=e,l.innerHTML="";const t=document.createElement("ul");t.id="card-list",e.forEach((e,n)=>{const a=document.createElement("li");a.draggable=!0,a.dataset.originalIndex=n;const r=document.createElement("input");r.type="checkbox",r.checked=!0;const s=document.createElement("label");s.textContent=`${e.front} - ${e.back}`,a.appendChild(r),a.appendChild(s),t.appendChild(a)}),l.appendChild(t);let n=null;t.addEventListener("dragstart",e=>{n=e.target,e.dataTransfer.effectAllowed="move",setTimeout(()=>e.target.classList.add("dragging"),0)}),t.addEventListener("dragend",e=>{n&&n.classList.remove("dragging")}),t.addEventListener("dragover",e=>{e.preventDefault();const a=e.target.closest("li");if(a&&a!==n){const r=a.getBoundingClientRect(),s=(e.clientY-r.top)/(r.bottom-r.top)>.5;t.insertBefore(n,s&&a.nextSibling||a)}}),r.classList.add("hidden"),i.classList.remove("hidden")}c.addEventListener("click",()=>{const a=document.getElementById("card-list"),s=[];a.querySelectorAll("li").forEach(e=>{if(e.querySelector('input[type="checkbox"]').checked){const t=parseInt(e.dataset.originalIndex,10);s.push(m[t])}}),0!==s.length?(i.classList.add("hidden"),function(a){d.classList.remove("hidden");const s=document.createElement("style");s.textContent="\n        .shake {\n            animation: shake 0.5s;\n        }\n        @keyframes shake {\n            10%, 90% { transform: translateX(-1px); }\n            20%, 80% { transform: translateX(2px); }\n            30%, 50%, 70% { transform: translateX(-4px); }\n            40%, 60% { transform: translateX(4px); }\n        }\n        .card.solved {\n            animation: solved-animation 0.5s forwards;\n        }\n        @keyframes solved-animation {\n            to {\n                transform: scale(1.1);\n                opacity: 0;\n            }\n        }\n    ",document.head.appendChild(s);const i=document.getElementById("game-board"),l=i.clientWidth,c=i.clientHeight,m=document.querySelector('input[name="game-mode"]:checked').value;let u=n.Normal;"reverse"===m?u=n.Reverse:"both"===m&&(u=n.Both);const p=document.getElementById("debug-mode").checked,h=window.innerWidth<=600?.75:1,f=BigInt(Math.floor(Math.random()*2**32));let g;try{g=t.new(l,c,f,u,h,a)}catch(e){return alert(`Error initializing game: ${e}`),r.classList.remove("hidden"),d.classList.add("hidden"),void(o.value="")}const b=g.get_id();console.log(`[Game ${b}] Initialized.`);const v=document.getElementById("cards-container"),y=document.getElementById("score"),w=document.getElementById("health"),k=document.getElementById("game-over-screen"),E=document.getElementById("answer-input"),_=document.getElementById("submit-btn"),x=document.getElementById("pause-btn"),L=document.getElementById("anki-export-btn");let C=null,B=new Map,I=new Map;p&&(C=document.createElement("div"),C.id="debug-pane",document.body.appendChild(C));let S=null,A=null,M=null,T=null;const j=document.createElement("div");function $(){if(g.is_game_over())g.restart(),k.classList.add("hidden"),L.classList.add("hidden"),j.style.display="none",E.focus();else if(g.is_paused())g.resume();else{const e=E.value;e&&(g.submit_answer(e)||(i.classList.add("shake"),setTimeout(()=>{i.classList.remove("shake")},500)),E.value="")}}j.id="pause-screen",j.className="overlay",j.innerHTML="<h1>Paused</h1><p>Press Enter to continue</p>",Object.assign(j.style,{position:"absolute",top:"0",left:"0",width:"100%",height:"100%",backgroundColor:"rgba(0, 0, 0, 0.7)",color:"white",zIndex:"20",display:"none",justifyContent:"center",alignItems:"center",flexDirection:"column"}),i.appendChild(j),A=e=>{"Enter"===e.key&&(e.preventDefault(),$())},E.addEventListener("keydown",A),_.addEventListener("click",$),M=e=>{"Tab"!==e.key||g.is_game_over()||(e.preventDefault(),g.pause())},document.addEventListener("keydown",M),x.addEventListener("click",()=>{g.is_game_over()||g.pause()}),L.addEventListener("click",function(){const e=g.get_missed_cards();if(0===e.length)return void alert("No missed cards to export.");let t="#separator:tab\n#html:true\n";t+=e.filter((e,t,n)=>t===n.findIndex(t=>t.raw_front===e.raw_front)).map(e=>`${e.raw_front}\t${e.raw_back}`).join("\n");const n=new Blob([t],{type:"text/plain;charset=utf-8;"}),a=document.createElement("a");if(void 0!==a.download){const e=URL.createObjectURL(n);a.setAttribute("href",e),a.setAttribute("download","anki_export.txt"),a.style.visibility="hidden",document.body.appendChild(a),a.click(),document.body.removeChild(a)}}),T=()=>{document.hidden&&!g.is_game_over()&&g.pause()},document.addEventListener("visibilitychange",T);let N=0;S=requestAnimationFrame(function e(t){const n=(t-N)/1e3;N=t,g.tick(n||0),function(){const e=g.get_cards(),t=new Set(e.map(e=>e.id));for(const[e,n]of B.entries())t.has(e)||(n.classList.add("solved"),n.addEventListener("animationend",()=>{n.remove()}),B.delete(e));if(p&&C){const e=g.get_all_cards_for_display();let t="\n                <h3>All Cards</h3>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Front</th>\n                            <th>Back</th>\n                            <th>S</th>\n                            <th>M</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n            ";for(const n of e)t+=`\n                    <tr ${n.is_unlocked?"":'class="locked"'}>\n                        <td>${n.front}</td>\n                        <td>${n.back}</td>\n                        <td>${n.success_count}</td>\n                        <td>${n.miss_count}</td>\n                    </tr>\n                `;t+="</tbody></table>",C.innerHTML=t}for(const t of e){let e=B.get(t.id);if(!e){e=document.createElement("div"),e.className="card",B.set(t.id,e),v.appendChild(e);const n=document.createElement("div");n.className="front";const a=document.createElement("span");a.className="card-text",n.appendChild(a),e.appendChild(n);const r=document.createElement("div");r.className="back";const s=document.createElement("span");s.className="card-text",r.appendChild(s),e.appendChild(r);const o=document.createElement("div");o.className="shields-container";for(let e=0;e<t.free_misses;e++){const e=document.createElement("span");e.className="shield",e.textContent="🛡️",o.appendChild(e)}n.appendChild(o)}const n=I.get(t.id);if(n&&!n.flipped&&t.flipped&&t.free_misses>0){const t=e.querySelectorAll(".shields-container .shield");if(t.length>0){const e=t[t.length-1];e.classList.add("lost"),e.addEventListener("animationend",()=>e.remove())}}t.flipped?e.classList.add("flipped"):e.classList.remove("flipped"),t.free_misses>0?e.classList.add("new"):e.classList.remove("new"),e.style.left=`${t.x}px`,e.style.top=`${t.y}px`,e.querySelector(".front .card-text").textContent=t.front,e.querySelector(".back .card-text").textContent=t.back}y.textContent=`Score: ${g.get_score()}`;const n=g.get_health(),a=g.get_max_health();let r="";for(let e=0;e<n;e++)r+="❤️";for(let e=0;e<a-n;e++)r+="🖤";w.innerHTML=r,g.is_game_over()&&(k.classList.remove("hidden"),g.get_missed_cards().length>0?L.classList.remove("hidden"):L.classList.add("hidden")),g.is_paused()?j.style.display="flex":j.style.display="none",I=new Map(e.map(e=>[e.id,{...e}]))}(),S=requestAnimationFrame(e)}),e.hot&&e.hot.dispose(()=>{window.location.reload()})}(s)):alert("You must enable at least one card to start the game.")}),s.addEventListener("click",()=>{u(a())}),o.addEventListener("change",e=>{const t=e.target.files[0];if(!t)return;const n=new FileReader;n.onload=e=>{const t=e.target.result.split("\n").filter(e=>""!==e.trim()).map(e=>{if(e.startsWith("#"))return null;const t=e.split("\t");return t.length>=2?{front:t[0].trim(),back:t[1].trim()}:null}).filter(Boolean);t.length>0?u(t):(alert('Could not parse deck. Make sure it is a tab-separated .txt file with "front\tback" format.'),o.value="")},n.readAsText(t)})}).catch(console.error))})();
//# sourceMappingURL=bootstrap.js.map