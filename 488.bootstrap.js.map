{"version":3,"file":"488.bootstrap.js","mappings":"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","sources":["webpack://flashcards-www/./pkg/flashcards.js","webpack://flashcards-www/./pkg/flashcards_bg.js"],"sourcesContent":["import * as wasm from \"./flashcards_bg.wasm\";\nexport * from \"./flashcards_bg.js\";\nimport { __wbg_set_wasm } from \"./flashcards_bg.js\";\n__wbg_set_wasm(wasm);\nwasm.__wbindgen_start();\n","let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nconst MAX_SAFARI_DECODE_BYTES = 2146435072;\nlet numBytesDecoded = 0;\nfunction decodeText(ptr, len) {\n    numBytesDecoded += len;\n    if (numBytesDecoded >= MAX_SAFARI_DECODE_BYTES) {\n        cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n        cachedTextDecoder.decode();\n        numBytesDecoded = len;\n    }\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return decodeText(ptr, len);\n}\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_2.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches && builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder();\n\nif (!('encodeInto' in cachedTextEncoder)) {\n    cachedTextEncoder.encodeInto = function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    }\n}\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = cachedTextEncoder.encodeInto(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n/**\n * @returns {any}\n */\nexport function get_default_deck() {\n    const ret = wasm.get_default_deck();\n    return ret;\n}\n\nfunction takeFromExternrefTable0(idx) {\n    const value = wasm.__wbindgen_export_2.get(idx);\n    wasm.__externref_table_dealloc(idx);\n    return value;\n}\n/**\n * @enum {0 | 1 | 2}\n */\nexport const GameMode = Object.freeze({\n    Normal: 0, \"0\": \"Normal\",\n    Reverse: 1, \"1\": \"Reverse\",\n    Both: 2, \"2\": \"Both\",\n});\n\nconst GameFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_game_free(ptr >>> 0, 1));\n\nexport class Game {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Game.prototype);\n        obj.__wbg_ptr = ptr;\n        GameFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        GameFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_game_free(ptr, 0);\n    }\n    /**\n     * @param {number} width\n     * @param {number} height\n     * @param {bigint} seed\n     * @param {GameMode} mode\n     * @param {number} speed_multiplier\n     * @param {any} custom_deck\n     * @returns {Game}\n     */\n    static new(width, height, seed, mode, speed_multiplier, custom_deck) {\n        const ret = wasm.game_new(width, height, seed, mode, speed_multiplier, custom_deck);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return Game.__wrap(ret[0]);\n    }\n    /**\n     * @param {number} dt\n     */\n    tick(dt) {\n        wasm.game_tick(this.__wbg_ptr, dt);\n    }\n    /**\n     * @returns {any}\n     */\n    get_cards() {\n        const ret = wasm.game_get_cards(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {number}\n     */\n    get_id() {\n        const ret = wasm.game_get_id(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {any}\n     */\n    get_all_cards_for_display() {\n        const ret = wasm.game_get_all_cards_for_display(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {any}\n     */\n    get_missed_cards() {\n        const ret = wasm.game_get_missed_cards(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {number}\n     */\n    get_score() {\n        const ret = wasm.game_get_score(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {number}\n     */\n    get_health() {\n        const ret = wasm.game_get_health(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {number}\n     */\n    get_max_health() {\n        const ret = wasm.game_get_max_health(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {boolean}\n     */\n    is_game_over() {\n        const ret = wasm.game_is_game_over(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    pause() {\n        wasm.game_pause(this.__wbg_ptr);\n    }\n    resume() {\n        wasm.game_resume(this.__wbg_ptr);\n    }\n    /**\n     * @returns {boolean}\n     */\n    is_paused() {\n        const ret = wasm.game_is_paused(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    restart() {\n        wasm.game_restart(this.__wbg_ptr);\n    }\n    /**\n     * @param {string} answer\n     * @returns {boolean}\n     */\n    submit_answer(answer) {\n        const ptr0 = passStringToWasm0(answer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.game_submit_answer(this.__wbg_ptr, ptr0, len0);\n        return ret !== 0;\n    }\n}\nif (Symbol.dispose) Game.prototype[Symbol.dispose] = Game.prototype.free;\n\nexport function __wbg_Error_e17e777aac105295(arg0, arg1) {\n    const ret = Error(getStringFromWasm0(arg0, arg1));\n    return ret;\n};\n\nexport function __wbg_call_13410aac570ffff7() { return handleError(function (arg0, arg1) {\n    const ret = arg0.call(arg1);\n    return ret;\n}, arguments) };\n\nexport function __wbg_done_75ed0ee6dd243d9d(arg0) {\n    const ret = arg0.done;\n    return ret;\n};\n\nexport function __wbg_get_0da715ceaecea5c8(arg0, arg1) {\n    const ret = arg0[arg1 >>> 0];\n    return ret;\n};\n\nexport function __wbg_get_458e874b43b18b25() { return handleError(function (arg0, arg1) {\n    const ret = Reflect.get(arg0, arg1);\n    return ret;\n}, arguments) };\n\nexport function __wbg_getwithrefkey_bb8f74a92cb2e784(arg0, arg1) {\n    const ret = arg0[arg1];\n    return ret;\n};\n\nexport function __wbg_instanceof_ArrayBuffer_67f3012529f6a2dd(arg0) {\n    let result;\n    try {\n        result = arg0 instanceof ArrayBuffer;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_instanceof_Uint8Array_9a8378d955933db7(arg0) {\n    let result;\n    try {\n        result = arg0 instanceof Uint8Array;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_isArray_030cce220591fb41(arg0) {\n    const ret = Array.isArray(arg0);\n    return ret;\n};\n\nexport function __wbg_iterator_f370b34483c71a1c() {\n    const ret = Symbol.iterator;\n    return ret;\n};\n\nexport function __wbg_length_186546c51cd61acd(arg0) {\n    const ret = arg0.length;\n    return ret;\n};\n\nexport function __wbg_length_6bb7e81f9d7713e4(arg0) {\n    const ret = arg0.length;\n    return ret;\n};\n\nexport function __wbg_new_19c25a3f2fa63a02() {\n    const ret = new Object();\n    return ret;\n};\n\nexport function __wbg_new_1f3a344cf3123716() {\n    const ret = new Array();\n    return ret;\n};\n\nexport function __wbg_new_638ebfaedbf32a5e(arg0) {\n    const ret = new Uint8Array(arg0);\n    return ret;\n};\n\nexport function __wbg_next_5b3530e612fde77d(arg0) {\n    const ret = arg0.next;\n    return ret;\n};\n\nexport function __wbg_next_692e82279131b03c() { return handleError(function (arg0) {\n    const ret = arg0.next();\n    return ret;\n}, arguments) };\n\nexport function __wbg_prototypesetcall_3d4a26c1ed734349(arg0, arg1, arg2) {\n    Uint8Array.prototype.set.call(getArrayU8FromWasm0(arg0, arg1), arg2);\n};\n\nexport function __wbg_set_3fda3bac07393de4(arg0, arg1, arg2) {\n    arg0[arg1] = arg2;\n};\n\nexport function __wbg_set_90f6c0f7bd8c0415(arg0, arg1, arg2) {\n    arg0[arg1 >>> 0] = arg2;\n};\n\nexport function __wbg_value_dd9372230531eade(arg0) {\n    const ret = arg0.value;\n    return ret;\n};\n\nexport function __wbg_wbindgenbooleanget_3fe6f642c7d97746(arg0) {\n    const v = arg0;\n    const ret = typeof(v) === 'boolean' ? v : undefined;\n    return isLikeNone(ret) ? 0xFFFFFF : ret ? 1 : 0;\n};\n\nexport function __wbg_wbindgendebugstring_99ef257a3ddda34d(arg0, arg1) {\n    const ret = debugString(arg1);\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbg_wbindgenin_d7a1ee10933d2d55(arg0, arg1) {\n    const ret = arg0 in arg1;\n    return ret;\n};\n\nexport function __wbg_wbindgenisfunction_8cee7dce3725ae74(arg0) {\n    const ret = typeof(arg0) === 'function';\n    return ret;\n};\n\nexport function __wbg_wbindgenisobject_307a53c6bd97fbf8(arg0) {\n    const val = arg0;\n    const ret = typeof(val) === 'object' && val !== null;\n    return ret;\n};\n\nexport function __wbg_wbindgenisundefined_c4b71d073b92f3c5(arg0) {\n    const ret = arg0 === undefined;\n    return ret;\n};\n\nexport function __wbg_wbindgenjsvallooseeq_9bec8c9be826bed1(arg0, arg1) {\n    const ret = arg0 == arg1;\n    return ret;\n};\n\nexport function __wbg_wbindgennumberget_f74b4c7525ac05cb(arg0, arg1) {\n    const obj = arg1;\n    const ret = typeof(obj) === 'number' ? obj : undefined;\n    getDataViewMemory0().setFloat64(arg0 + 8 * 1, isLikeNone(ret) ? 0 : ret, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n};\n\nexport function __wbg_wbindgenstringget_0f16a6ddddef376f(arg0, arg1) {\n    const obj = arg1;\n    const ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbg_wbindgenthrow_451ec1a8469d7eb6(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_cast_2241b6af4c4b2941(arg0, arg1) {\n    // Cast intrinsic for `Ref(String) -> Externref`.\n    const ret = getStringFromWasm0(arg0, arg1);\n    return ret;\n};\n\nexport function __wbindgen_cast_d6cd19b81560fd6e(arg0) {\n    // Cast intrinsic for `F64 -> Externref`.\n    const ret = arg0;\n    return ret;\n};\n\nexport function __wbindgen_init_externref_table() {\n    const table = wasm.__wbindgen_export_2;\n    const offset = table.grow(4);\n    table.set(0, undefined);\n    table.set(offset + 0, undefined);\n    table.set(offset + 1, null);\n    table.set(offset + 2, true);\n    table.set(offset + 3, false);\n    ;\n};\n\n"],"names":["wasm","__wbg_set_wasm","val","cachedUint8ArrayMemory0","getUint8ArrayMemory0","byteLength","Uint8Array","memory","buffer","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","MAX_SAFARI_DECODE_BYTES","numBytesDecoded","getStringFromWasm0","ptr","len","subarray","decodeText","handleError","f","args","apply","this","e","idx","obj","__externref_table_alloc","__wbindgen_export_2","set","addToExternrefTable0","__wbindgen_exn_store","isLikeNone","x","debugString","type","description","name","length","Array","isArray","debug","i","builtInMatches","exec","toString","call","className","JSON","stringify","_","Error","message","stack","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","passStringToWasm0","arg","malloc","realloc","undefined","buf","encode","mem","offset","code","charCodeAt","slice","view","encodeInto","written","read","cachedDataViewMemory0","getDataViewMemory0","detached","DataView","get_default_deck","GameMode","Object","freeze","Normal","Reverse","Both","GameFinalization","FinalizationRegistry","register","unregister","__wbg_game_free","Game","__wrap","create","prototype","__wbg_ptr","__destroy_into_raw","free","width","height","seed","mode","speed_multiplier","custom_deck","ret","game_new","value","get","__externref_table_dealloc","takeFromExternrefTable0","tick","dt","game_tick","get_cards","game_get_cards","get_id","game_get_id","get_all_cards_for_display","game_get_all_cards_for_display","get_missed_cards","game_get_missed_cards","get_score","game_get_score","get_health","game_get_health","get_max_health","game_get_max_health","is_game_over","game_is_game_over","pause","game_pause","resume","game_resume","is_paused","game_is_paused","restart","game_restart","submit_answer","answer","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","game_submit_answer","__wbg_Error_e17e777aac105295","arg0","arg1","__wbg_call_13410aac570ffff7","arguments","__wbg_done_75ed0ee6dd243d9d","done","__wbg_get_0da715ceaecea5c8","__wbg_get_458e874b43b18b25","Reflect","__wbg_getwithrefkey_bb8f74a92cb2e784","__wbg_instanceof_ArrayBuffer_67f3012529f6a2dd","result","ArrayBuffer","__wbg_instanceof_Uint8Array_9a8378d955933db7","__wbg_isArray_030cce220591fb41","__wbg_iterator_f370b34483c71a1c","Symbol","iterator","__wbg_length_186546c51cd61acd","__wbg_length_6bb7e81f9d7713e4","__wbg_new_19c25a3f2fa63a02","__wbg_new_1f3a344cf3123716","__wbg_new_638ebfaedbf32a5e","__wbg_next_5b3530e612fde77d","next","__wbg_next_692e82279131b03c","__wbg_prototypesetcall_3d4a26c1ed734349","arg2","__wbg_set_3fda3bac07393de4","__wbg_set_90f6c0f7bd8c0415","__wbg_value_dd9372230531eade","__wbg_wbindgenbooleanget_3fe6f642c7d97746","__wbg_wbindgendebugstring_99ef257a3ddda34d","ptr1","len1","setInt32","__wbg_wbindgenin_d7a1ee10933d2d55","__wbg_wbindgenisfunction_8cee7dce3725ae74","__wbg_wbindgenisobject_307a53c6bd97fbf8","__wbg_wbindgenisundefined_c4b71d073b92f3c5","__wbg_wbindgenjsvallooseeq_9bec8c9be826bed1","__wbg_wbindgennumberget_f74b4c7525ac05cb","setFloat64","__wbg_wbindgenstringget_0f16a6ddddef376f","__wbg_wbindgenthrow_451ec1a8469d7eb6","__wbindgen_cast_2241b6af4c4b2941","__wbindgen_cast_d6cd19b81560fd6e","__wbindgen_init_externref_table","table","grow","dispose"],"sourceRoot":""}