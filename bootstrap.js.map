{"version":3,"file":"bootstrap.js","mappings":"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","sources":["webpack://flashcards-www/webpack/runtime/create fake namespace object","webpack://flashcards-www/webpack/runtime/load script","webpack://flashcards-www/webpack/bootstrap","webpack://flashcards-www/webpack/runtime/define property getters","webpack://flashcards-www/webpack/runtime/ensure chunk","webpack://flashcards-www/webpack/runtime/get javascript chunk filename","webpack://flashcards-www/webpack/runtime/hasOwnProperty shorthand","webpack://flashcards-www/webpack/runtime/make namespace object","webpack://flashcards-www/webpack/runtime/publicPath","webpack://flashcards-www/webpack/runtime/jsonp chunk loading","webpack://flashcards-www/./www/index.js"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"flashcards-www:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bootstrap.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/DropCardRs/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkflashcards_www\"] = self[\"webpackChunkflashcards_www\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","if (window.isFlashCardGameRunning) {\n    console.warn(\"Skipping duplicate game initialization.\");\n} else {\n    window.isFlashCardGameRunning = true;\n\n    Promise.all([\n        import('../pkg/flashcards.js'),\n        import('../pkg/flashcards_bg.wasm'),\n        import('./cards.js'),\n    ]).then(async ([module, wasm, cards]) => {\n    await module.default(wasm.default);\n    const { Game, GameMode, parse_deck, configure_deck } = module;\n    const { CARD_DATA: defaultCardDataString } = cards;\n\n    const startScreen = document.getElementById('start-screen');\n    const startDefaultBtn = document.getElementById('start-default-btn');\n    const ankiImportInput = document.getElementById('anki-import-input');\n    const gameContainer = document.getElementById('game-container');\n    const deckConfigScreen = document.getElementById('deck-config-screen');\n    const cardListContainer = document.getElementById('card-list-container');\n    const startConfiguredGameBtn = document.getElementById('start-configured-game-btn');\n    let loadedDeck = [];\n\n    function initializeAndRunGame(configuredDeck) {\n        gameContainer.classList.remove('hidden');\n        const style = document.createElement('style');\n    style.textContent = `\n        .shake {\n            animation: shake 0.5s;\n        }\n        @keyframes shake {\n            10%, 90% { transform: translateX(-1px); }\n            20%, 80% { transform: translateX(2px); }\n            30%, 50%, 70% { transform: translateX(-4px); }\n            40%, 60% { transform: translateX(4px); }\n        }\n        .card.solved {\n            animation: solved-animation 0.5s forwards;\n        }\n        @keyframes solved-animation {\n            to {\n                transform: scale(1.1);\n                opacity: 0;\n            }\n        }\n    `;\n    document.head.appendChild(style);\n\n    const gameBoard = document.getElementById('game-board');\n    const GAME_WIDTH = gameBoard.clientWidth;\n    const GAME_HEIGHT = gameBoard.clientHeight;\n\n    const selectedMode = document.querySelector('input[name=\"game-mode\"]:checked').value;\n    let mode = GameMode.Normal;\n    if (selectedMode === 'reverse') {\n        mode = GameMode.Reverse;\n    } else if (selectedMode === 'both') {\n        mode = GameMode.Both;\n    }\n    const isDebug = document.getElementById('debug-mode').checked;\n\n    const isMobile = window.innerWidth <= 600;\n    const speedMultiplier = isMobile ? 0.75 : 1.0;\n    \n    const seed = BigInt(Math.floor(Math.random() * 2**32));\n    let game;\n    try {\n        game = Game.new(GAME_WIDTH, GAME_HEIGHT, seed, mode, speedMultiplier, configuredDeck);\n    } catch (e) {\n        alert(`Error initializing game: ${e}`);\n        startScreen.classList.remove('hidden');\n        gameContainer.classList.add('hidden');\n        ankiImportInput.value = '';\n        return;\n    }\n    const gameId = game.get_id();\n    console.log(`[Game ${gameId}] Initialized.`);\n    const cardsContainer = document.getElementById('cards-container');\n    const scoreElement = document.getElementById('score');\n    const healthElement = document.getElementById('health');\n    const gameOverScreen = document.getElementById('game-over-screen');\n    const answerInput = document.getElementById('answer-input');\n    const submitBtn = document.getElementById('submit-btn');\n    const pauseBtn = document.getElementById('pause-btn');\n    const ankiExportBtn = document.getElementById('anki-export-btn');\n\n    let debugPane = null;\n    let cardElements = new Map();\n    let previousCardStates = new Map();\n\n    if (isDebug) {\n        debugPane = document.createElement('div');\n        debugPane.id = 'debug-pane';\n        document.body.appendChild(debugPane);\n    }\n\n    // --- State for cleanup ---\n    let animationFrameId = null;\n    let answerHandler = null;\n    let tabKeyHandler = null;\n    let visibilityChangeHandler = null;\n    // ---\n\n    const pauseScreen = document.createElement('div');\n    pauseScreen.id = 'pause-screen';\n    pauseScreen.className = 'overlay';\n    pauseScreen.innerHTML = '<h1>Paused</h1><p>Press Enter to continue</p>';\n    Object.assign(pauseScreen.style, {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n        color: 'white',\n        zIndex: '20',\n        display: 'none',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n    });\n    gameBoard.appendChild(pauseScreen);\n\n    function handleSubmit() {\n        if (game.is_game_over()) {\n            game.restart();\n            gameOverScreen.classList.add('hidden');\n            ankiExportBtn.classList.add('hidden');\n            pauseScreen.style.display = 'none';\n            answerInput.focus();\n        } else if (game.is_paused()) {\n            game.resume();\n        } else {\n            const answer = answerInput.value;\n            if (answer) {\n                if (!game.submit_answer(answer)) {\n                    gameBoard.classList.add('shake');\n                    setTimeout(() => {\n                        gameBoard.classList.remove('shake');\n                    }, 500);\n                }\n                answerInput.value = '';\n            }\n        }\n    }\n\n    answerHandler = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            handleSubmit();\n        }\n    };\n    answerInput.addEventListener('keydown', answerHandler);\n    submitBtn.addEventListener('click', handleSubmit);\n\n    tabKeyHandler = (event) => {\n        if (event.key === 'Tab' && !game.is_game_over()) {\n            event.preventDefault();\n            game.pause();\n        }\n    };\n    document.addEventListener('keydown', tabKeyHandler);\n\n    pauseBtn.addEventListener('click', () => {\n        if (!game.is_game_over()) {\n            game.pause();\n        }\n    });\n\n    function exportToAnki() {\n        const fileContent = game.generate_anki_export();\n        if (!fileContent) {\n            alert(\"No missed cards to export.\");\n            return;\n        }\n        \n        const blob = new Blob([fileContent], { type: 'text/plain;charset=utf-8;' });\n        const link = document.createElement(\"a\");\n        if (link.download !== undefined) {\n            const url = URL.createObjectURL(blob);\n            link.setAttribute(\"href\", url);\n            link.setAttribute(\"download\", \"anki_export.txt\");\n            link.style.visibility = 'hidden';\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n\n    ankiExportBtn.addEventListener('click', exportToAnki);\n\n    visibilityChangeHandler = () => {\n        if (document.hidden && !game.is_game_over()) {\n            game.pause();\n        }\n    };\n    document.addEventListener('visibilitychange', visibilityChangeHandler);\n\n    let lastTime = 0;\n    let lastLogTime = 0;\n    function gameLoop(timestamp) {\n        const deltaTime = (timestamp - lastTime) / 1000; // in seconds\n        lastTime = timestamp;\n\n        game.tick(deltaTime || 0);\n\n        render(timestamp);\n\n        animationFrameId = requestAnimationFrame(gameLoop);\n    }\n\n    function render(timestamp) {\n        const currentCards = game.get_cards_for_render();\n        const currentCardIds = new Set(currentCards.map(c => c.id));\n\n        // Animate and remove solved cards\n        for (const [id, element] of cardElements.entries()) {\n            if (!currentCardIds.has(id)) {\n                element.classList.add('solved');\n                element.addEventListener('animationend', () => {\n                    element.remove();\n                });\n                cardElements.delete(id);\n            }\n        }\n\n        if (isDebug && debugPane) {\n            const allCards = game.get_all_cards_for_display();\n            let content = `\n                <h3>All Cards</h3>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Front</th>\n                            <th>Back</th>\n                            <th>S</th>\n                            <th>M</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n            `;\n            for (const card of allCards) {\n                const rowClass = card.is_unlocked ? '' : 'class=\"locked\"';\n                content += `\n                    <tr ${rowClass}>\n                        <td>${card.front}</td>\n                        <td>${card.back}</td>\n                        <td>${card.success_count}</td>\n                        <td>${card.miss_count}</td>\n                    </tr>\n                `;\n            }\n            content += '</tbody></table>';\n            debugPane.innerHTML = content;\n        }\n\n        // Add or update cards on screen\n        for (const card of currentCards) {\n            let cardElement = cardElements.get(card.id);\n\n            if (!cardElement) { // New card\n                cardElement = document.createElement('div');\n                cardElement.className = 'card';\n                cardElements.set(card.id, cardElement);\n                cardsContainer.appendChild(cardElement);\n\n                const front = document.createElement('div');\n                front.className = 'front';\n                const frontText = document.createElement('span');\n                frontText.className = 'card-text';\n                front.appendChild(frontText);\n                cardElement.appendChild(front);\n\n                const back = document.createElement('div');\n                back.className = 'back';\n                const backText = document.createElement('span');\n                backText.className = 'card-text';\n                back.appendChild(backText);\n                cardElement.appendChild(back);\n\n                const shieldsContainer = document.createElement('div');\n                shieldsContainer.className = 'shields-container';\n                for (let i = 0; i < card.free_misses; i++) {\n                    const shield = document.createElement('span');\n                    shield.className = 'shield';\n                    shield.textContent = '🛡️';\n                    shieldsContainer.appendChild(shield);\n                }\n                front.appendChild(shieldsContainer);\n\n                // Cache references to the text elements\n                cardElement.textSpans = { front: frontText, back: backText };\n            }\n\n            const previousState = previousCardStates.get(card.id);\n            if (previousState && !previousState.flipped && card.flipped && card.free_misses > 0) {\n                const shields = cardElement.querySelectorAll('.shields-container .shield');\n                if (shields.length > 0) {\n                    const lostShield = shields[shields.length - 1];\n                    lostShield.classList.add('lost');\n                    lostShield.addEventListener('animationend', () => lostShield.remove());\n                }\n            }\n            \n            // Update common properties\n            if (card.flipped) {\n                cardElement.classList.add('flipped');\n            } else {\n                cardElement.classList.remove('flipped');\n            }\n            if (card.free_misses > 0) {\n                cardElement.classList.add('new');\n            } else {\n                cardElement.classList.remove('new');\n            }\n            cardElement.style.left = `${card.x}px`;\n            cardElement.style.top = `${card.y}px`;\n            \n            // Use cached references instead of querySelector\n            cardElement.textSpans.front.textContent = card.front;\n            cardElement.textSpans.back.textContent = card.back;\n        }\n\n        scoreElement.textContent = `Score: ${game.get_score()}`;\n\n        // Render health\n        const health = game.get_health();\n        const maxHealth = game.get_max_health();\n        let hearts = '';\n        for (let i = 0; i < health; i++) {\n            hearts += '❤️';\n        }\n        for (let i = 0; i < maxHealth - health; i++) {\n            hearts += '🖤';\n        }\n        healthElement.innerHTML = hearts;\n\n        // Game over\n        if (game.is_game_over()) {\n            gameOverScreen.classList.remove('hidden');\n            const missed_cards = game.get_missed_cards();\n            if (missed_cards.length > 0) {\n                ankiExportBtn.classList.remove('hidden');\n            } else {\n                ankiExportBtn.classList.add('hidden');\n            }\n        }\n\n        // Pause\n        if (game.is_paused()) {\n            pauseScreen.style.display = 'flex';\n        } else {\n            pauseScreen.style.display = 'none';\n        }\n\n        previousCardStates = new Map(currentCards.map(c => [c.id, { ...c }]));\n    }\n\n    animationFrameId = requestAnimationFrame(gameLoop);\n\n        if (module.hot) {\n            module.hot.dispose(() => {\n                // A full reload is the most robust way to handle HMR\n                window.location.reload();\n            });\n        }\n    }\n\n    function showDeckConfiguration(deck) {\n        loadedDeck = deck;\n        cardListContainer.innerHTML = '';\n        const ul = document.createElement('ul');\n        ul.id = 'card-list';\n        \n        deck.forEach((card, index) => {\n            const li = document.createElement('li');\n            li.draggable = true;\n            li.dataset.originalIndex = index;\n            \n            const checkbox = document.createElement('input');\n            checkbox.type = 'checkbox';\n            checkbox.checked = true;\n            \n            const label = document.createElement('label');\n            label.textContent = `${card.front} - ${card.back}`;\n            \n            li.appendChild(checkbox);\n            li.appendChild(label);\n            ul.appendChild(li);\n        });\n        \n        cardListContainer.appendChild(ul);\n        \n        let draggingElement = null;\n\n        ul.addEventListener('dragstart', e => {\n            draggingElement = e.target;\n            e.dataTransfer.effectAllowed = 'move';\n            setTimeout(() => e.target.classList.add('dragging'), 0);\n        });\n\n        ul.addEventListener('dragend', e => {\n            if (draggingElement) {\n                draggingElement.classList.remove('dragging');\n            }\n        });\n\n        ul.addEventListener('dragover', e => {\n            e.preventDefault();\n            const target = e.target.closest('li');\n            if (target && target !== draggingElement) {\n                const rect = target.getBoundingClientRect();\n                const next = (e.clientY - rect.top) / (rect.bottom - rect.top) > .5;\n                ul.insertBefore(draggingElement, next && target.nextSibling || target);\n            }\n        });\n\n        startScreen.classList.add('hidden');\n        deckConfigScreen.classList.remove('hidden');\n    }\n\n    startConfiguredGameBtn.addEventListener('click', () => {\n        const cardList = document.getElementById('card-list');\n        const orderedIndices = [];\n        cardList.querySelectorAll('li').forEach(li => {\n            const checkbox = li.querySelector('input[type=\"checkbox\"]');\n            if (checkbox.checked) {\n                const cardIndex = parseInt(li.dataset.originalIndex, 10);\n                orderedIndices.push(cardIndex);\n            }\n        });\n\n        if (orderedIndices.length === 0) {\n            alert(\"You must enable at least one card to start the game.\");\n            return;\n        }\n        \n        try {\n            const configuredDeck = configure_deck(loadedDeck, orderedIndices);\n            deckConfigScreen.classList.add('hidden');\n            initializeAndRunGame(configuredDeck);\n        } catch (e) {\n            alert(`Error configuring deck: ${e}`);\n        }\n    });\n\n    startDefaultBtn.addEventListener('click', () => {\n        const defaultDeck = parse_deck(defaultCardDataString);\n        showDeckConfiguration(defaultDeck);\n    });\n    \n    ankiImportInput.addEventListener('change', (event) => {\n        const file = event.target.files[0];\n        if (!file) {\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const text = e.target.result;\n            const deck = parse_deck(text);\n\n            if (deck.length > 0) {\n                showDeckConfiguration(deck);\n            } else {\n                alert('Could not parse deck. Make sure it is a tab-separated .txt file with \"front\\tback\" format.');\n                ankiImportInput.value = '';\n            }\n        };\n        reader.readAsText(file);\n    });\n\n    }).catch(console.error);\n}\n"],"names":["leafPrototypes","getProto","inProgress","dataWebpackPrefix","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","Object","getPrototypeOf","obj","t","value","mode","this","__esModule","then","ns","create","r","def","current","indexOf","getOwnPropertyNames","forEach","key","d","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","prop","prototype","hasOwnProperty","call","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","fn","setTimeout","bind","type","target","head","appendChild","Symbol","toStringTag","p","b","baseURI","self","location","href","installedChunks","j","installedChunkData","promise","resolve","reject","error","Error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","window","isFlashCardGameRunning","console","warn","async","wasm","cards","default","Game","GameMode","parse_deck","configure_deck","CARD_DATA","defaultCardDataString","startScreen","getElementById","startDefaultBtn","ankiImportInput","gameContainer","deckConfigScreen","cardListContainer","startConfiguredGameBtn","loadedDeck","showDeckConfiguration","deck","innerHTML","ul","card","index","li","draggable","dataset","originalIndex","checkbox","checked","label","textContent","front","back","draggingElement","addEventListener","dataTransfer","effectAllowed","classList","add","remove","preventDefault","closest","rect","getBoundingClientRect","next","clientY","top","bottom","insertBefore","nextSibling","cardList","orderedIndices","querySelectorAll","querySelector","cardIndex","parseInt","configuredDeck","style","gameBoard","GAME_WIDTH","clientWidth","GAME_HEIGHT","clientHeight","selectedMode","Normal","Reverse","Both","isDebug","speedMultiplier","innerWidth","seed","BigInt","Math","floor","random","game","new","alert","gameId","get_id","log","cardsContainer","scoreElement","healthElement","gameOverScreen","answerInput","submitBtn","pauseBtn","ankiExportBtn","debugPane","cardElements","Map","previousCardStates","body","animationFrameId","answerHandler","tabKeyHandler","visibilityChangeHandler","pauseScreen","handleSubmit","is_game_over","restart","display","focus","is_paused","resume","answer","submit_answer","className","assign","position","left","width","height","backgroundColor","color","zIndex","justifyContent","alignItems","flexDirection","pause","fileContent","generate_anki_export","blob","Blob","link","download","URL","createObjectURL","visibility","click","hidden","lastTime","requestAnimationFrame","gameLoop","timestamp","deltaTime","tick","currentCards","get_cards_for_render","currentCardIds","Set","map","c","element","entries","has","delete","allCards","get_all_cards_for_display","content","is_unlocked","success_count","miss_count","cardElement","set","frontText","backText","shieldsContainer","free_misses","shield","textSpans","previousState","flipped","shields","lostShield","x","y","get_score","health","get_health","maxHealth","get_max_health","hearts","get_missed_cards","render","hot","dispose","reload","initializeAndRunGame","file","files","reader","FileReader","text","result","readAsText","catch"],"sourceRoot":""}